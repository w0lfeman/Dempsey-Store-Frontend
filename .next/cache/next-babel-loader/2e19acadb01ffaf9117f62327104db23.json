{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/davidmacbook/Code/Advanced-React/sick-fits/frontend/Dempsey-Store-Frontend/components/AddToCart.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation addToCart($id: ID!) {\\n    addToCart(id: $id) {\\n      id\\n      quantity\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\nvar ADD_TO_CART_MUTATION = gql(_templateObject());\n\nvar AddToCart = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddToCart, _React$Component);\n\n  var _super = _createSuper(AddToCart);\n\n  function AddToCart() {\n    _classCallCheck(this, AddToCart);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AddToCart, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var id = this.props.id;\n      return __jsx(Mutation, {\n        mutation: ADD_TO_CART_MUTATION,\n        variables: {\n          id: id\n        },\n        refetchQueries: [{\n          query: CURRENT_USER_QUERY\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, function (addToCart, _ref) {\n        var loading = _ref.loading;\n        return __jsx(\"button\", {\n          disabled: loading,\n          onClick: addToCart,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 11\n          }\n        }, \"Add\", loading && 'ing', \" To Cart \\uD83D\\uDED2\");\n      });\n    }\n  }]);\n\n  return AddToCart;\n}(React.Component);\n\nexport default AddToCart;\nexport { ADD_TO_CART_MUTATION };","map":{"version":3,"sources":["/Users/davidmacbook/Code/Advanced-React/sick-fits/frontend/Dempsey-Store-Frontend/components/AddToCart.js"],"names":["React","Mutation","gql","CURRENT_USER_QUERY","ADD_TO_CART_MUTATION","AddToCart","id","props","query","addToCart","loading","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AAEA,IAAMC,oBAAoB,GAAGF,GAAH,mBAA1B;;IASMG,S;;;;;;;;;;;;;6BACK;AAAA;;AAAA,UACCC,EADD,GACQ,KAAKC,KADb,CACCD,EADD;AAEP,aACE,MAAC,QAAD;AACE,QAAA,QAAQ,EAAEF,oBADZ;AAEE,QAAA,SAAS,EAAE;AACTE,UAAAA,EAAE,EAAFA;AADS,SAFb;AAKE,QAAA,cAAc,EAAE,CAAC;AAAEE,UAAAA,KAAK,EAAEL;AAAT,SAAD,CALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOG,UAACM,SAAD;AAAA,YAAcC,OAAd,QAAcA,OAAd;AAAA,eACC;AAAQ,UAAA,QAAQ,EAAEA,OAAlB;AAA2B,UAAA,OAAO,EAAED,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACMC,OAAO,IAAI,KADjB,0BADD;AAAA,OAPH,CADF;AAeD;;;;EAlBqBV,KAAK,CAACW,S;;AAoB9B,eAAeN,SAAf;AACA,SAASD,oBAAT","sourcesContent":["import React from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst ADD_TO_CART_MUTATION = gql`\n  mutation addToCart($id: ID!) {\n    addToCart(id: $id) {\n      id\n      quantity\n    }\n  }\n`;\n\nclass AddToCart extends React.Component {\n  render() {\n    const { id } = this.props;\n    return (\n      <Mutation\n        mutation={ADD_TO_CART_MUTATION}\n        variables={{\n          id,\n        }}\n        refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n      >\n        {(addToCart, { loading }) => (\n          <button disabled={loading} onClick={addToCart}>\n            Add{loading && 'ing'} To Cart ðŸ›’\n          </button>\n        )}\n      </Mutation>\n    );\n  }\n}\nexport default AddToCart;\nexport { ADD_TO_CART_MUTATION };"]},"metadata":{},"sourceType":"module"}