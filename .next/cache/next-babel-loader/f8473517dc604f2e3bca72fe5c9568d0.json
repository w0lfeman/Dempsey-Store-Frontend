{"ast":null,"code":"var _jsxFileName = \"/Users/davidmacbook/Code/Advanced-React/sick-fits/frontend/Dempsey-Store-Frontend/components/RemoveFromCart.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Mutation } from 'react-apollo';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\nconst REMOVE_FROM_CART_MUTATION = gql`\n  mutation removeFromCart($id: ID!) {\n    removeFromCart(id: $id) {\n      id\n    }\n  }\n`;\nconst BigButton = styled.button.withConfig({\n  displayName: \"RemoveFromCart__BigButton\",\n  componentId: \"emvtd6-0\"\n})([\"font-size:3rem;background:none;border:0;&:hover{color:\", \";cursor:pointer;}\"], props => props.theme.red);\n\nclass RemoveFromCart extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"update\", (cache, payload) => {\n      // 1. first read the cache\n      const data = cache.readQuery({\n        query: CURRENT_USER_QUERY\n      }); // 2. remove that item from the cart\n\n      const cartItemId = payload.data.removeFromCart.id;\n      data.me.cart = data.me.cart.filter(cartItem => cartItem.id !== cartItemId); // 3. write it back to the cache\n\n      cache.writeQuery({\n        query: CURRENT_USER_QUERY,\n        data\n      });\n    });\n  }\n\n  render() {\n    return __jsx(Mutation, {\n      mutation: REMOVE_FROM_CART_MUTATION,\n      variables: {\n        id: this.props.id\n      },\n      update: this.update,\n      optimisticResponse: {\n        __typename: 'Mutation',\n        removeFromCart: {\n          __typename: 'CartItem',\n          id: this.props.id\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, (removeFromCart, {\n      loading,\n      error\n    }) => __jsx(BigButton, {\n      disabled: loading,\n      onClick: () => {\n        removeFromCart().catch(err => alert(err.message));\n      },\n      title: \"Delete Item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, \"\\xD7\"));\n  }\n\n}\n\n_defineProperty(RemoveFromCart, \"propTypes\", {\n  id: PropTypes.string.isRequired\n});\n\nexport default RemoveFromCart;\nexport { REMOVE_FROM_CART_MUTATION };","map":{"version":3,"sources":["/Users/davidmacbook/Code/Advanced-React/sick-fits/frontend/Dempsey-Store-Frontend/components/RemoveFromCart.js"],"names":["React","Mutation","styled","PropTypes","gql","CURRENT_USER_QUERY","REMOVE_FROM_CART_MUTATION","BigButton","button","props","theme","red","RemoveFromCart","Component","cache","payload","data","readQuery","query","cartItemId","removeFromCart","id","me","cart","filter","cartItem","writeQuery","render","update","__typename","loading","error","catch","err","alert","message","string","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AAEA,MAAMC,yBAAyB,GAAGF,GAAI;;;;;;CAAtC;AAQA,MAAMG,SAAS,GAAGL,MAAM,CAACM,MAAV;AAAA;AAAA;AAAA,oFAKFC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,GALnB,CAAf;;AAUA,MAAMC,cAAN,SAA6BZ,KAAK,CAACa,SAAnC,CAA6C;AAAA;AAAA;;AAAA,oCAKlC,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC3B;AACA,YAAMC,IAAI,GAAGF,KAAK,CAACG,SAAN,CAAgB;AAAEC,QAAAA,KAAK,EAAEb;AAAT,OAAhB,CAAb,CAF2B,CAG3B;;AACA,YAAMc,UAAU,GAAGJ,OAAO,CAACC,IAAR,CAAaI,cAAb,CAA4BC,EAA/C;AACAL,MAAAA,IAAI,CAACM,EAAL,CAAQC,IAAR,GAAeP,IAAI,CAACM,EAAL,CAAQC,IAAR,CAAaC,MAAb,CAAoBC,QAAQ,IAAIA,QAAQ,CAACJ,EAAT,KAAgBF,UAAhD,CAAf,CAL2B,CAM3B;;AACAL,MAAAA,KAAK,CAACY,UAAN,CAAiB;AAAER,QAAAA,KAAK,EAAEb,kBAAT;AAA6BW,QAAAA;AAA7B,OAAjB;AACD,KAb0C;AAAA;;AAc3CW,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,QAAD;AACE,MAAA,QAAQ,EAAErB,yBADZ;AAEE,MAAA,SAAS,EAAE;AAAEe,QAAAA,EAAE,EAAE,KAAKZ,KAAL,CAAWY;AAAjB,OAFb;AAGE,MAAA,MAAM,EAAE,KAAKO,MAHf;AAIE,MAAA,kBAAkB,EAAE;AAClBC,QAAAA,UAAU,EAAE,UADM;AAElBT,QAAAA,cAAc,EAAE;AACdS,UAAAA,UAAU,EAAE,UADE;AAEdR,UAAAA,EAAE,EAAE,KAAKZ,KAAL,CAAWY;AAFD;AAFE,OAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYG,CAACD,cAAD,EAAiB;AAAEU,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAjB,KACC,MAAC,SAAD;AACE,MAAA,QAAQ,EAAED,OADZ;AAEE,MAAA,OAAO,EAAE,MAAM;AACbV,QAAAA,cAAc,GAAGY,KAAjB,CAAuBC,GAAG,IAAIC,KAAK,CAACD,GAAG,CAACE,OAAL,CAAnC;AACD,OAJH;AAKE,MAAA,KAAK,EAAC,aALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,CADF;AA0BD;;AAzC0C;;gBAAvCvB,c,eACe;AACjBS,EAAAA,EAAE,EAAElB,SAAS,CAACiC,MAAV,CAAiBC;AADJ,C;;AA2CrB,eAAezB,cAAf;AACA,SAASN,yBAAT","sourcesContent":["import React from 'react';\nimport { Mutation } from 'react-apollo';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\n\nconst REMOVE_FROM_CART_MUTATION = gql`\n  mutation removeFromCart($id: ID!) {\n    removeFromCart(id: $id) {\n      id\n    }\n  }\n`;\n\nconst BigButton = styled.button`\n  font-size: 3rem;\n  background: none;\n  border: 0;\n  &:hover {\n    color: ${props => props.theme.red};\n    cursor: pointer;\n  }\n`;\n\nclass RemoveFromCart extends React.Component {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n  };\n  // This gets called as soon as we get a response back from the server after a mutation has been performed\n  update = (cache, payload) => {\n    // 1. first read the cache\n    const data = cache.readQuery({ query: CURRENT_USER_QUERY });\n    // 2. remove that item from the cart\n    const cartItemId = payload.data.removeFromCart.id;\n    data.me.cart = data.me.cart.filter(cartItem => cartItem.id !== cartItemId);\n    // 3. write it back to the cache\n    cache.writeQuery({ query: CURRENT_USER_QUERY, data });\n  };\n  render() {\n    return (\n      <Mutation\n        mutation={REMOVE_FROM_CART_MUTATION}\n        variables={{ id: this.props.id }}\n        update={this.update}\n        optimisticResponse={{\n          __typename: 'Mutation',\n          removeFromCart: {\n            __typename: 'CartItem',\n            id: this.props.id,\n          },\n        }}\n      >\n        {(removeFromCart, { loading, error }) => (\n          <BigButton\n            disabled={loading}\n            onClick={() => {\n              removeFromCart().catch(err => alert(err.message));\n            }}\n            title=\"Delete Item\"\n          >\n            &times;\n          </BigButton>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default RemoveFromCart;\nexport { REMOVE_FROM_CART_MUTATION };"]},"metadata":{},"sourceType":"module"}