{"ast":null,"code":"var _jsxFileName = \"/Users/davidmacbook/Code/Advanced-React/sick-fits/frontend/Dempsey-Store-Frontend/components/Permissions.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Query, Mutation } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\nconst possiblePermissions = ['ADMIN', 'USER', 'ITEMCREATE', 'ITEMUPDATE', 'ITEMDELETE', 'PERMISSIONUPDATE'];\nconst UPDATE_PERMISSIONS_MUTATION = gql`\n  mutation updatePermissions($permissions: [Permission], $userId: ID!) {\n    updatePermissions(permissions: $permissions, userId: $userId) {\n      id\n      permissions\n      name\n      email\n    }\n  }\n`;\nconst ALL_USERS_QUERY = gql`\n  query {\n    users {\n      id\n      name\n      email\n      permissions\n    }\n  }\n`;\n\nconst Permissions = props => __jsx(Query, {\n  query: ALL_USERS_QUERY,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }\n}, ({\n  data,\n  loading,\n  error\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }\n}, __jsx(Error, {\n  error: error,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }\n}), __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }\n}, __jsx(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 11\n  }\n}, \"Manage Permissions\"), __jsx(Table, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 11\n  }\n}, __jsx(\"thead\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 13\n  }\n}, __jsx(\"tr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 15\n  }\n}, __jsx(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 17\n  }\n}, \"Name\"), __jsx(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 17\n  }\n}, \"Email\"), possiblePermissions.map(permission => __jsx(\"th\", {\n  key: permission,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 56\n  }\n}, permission)), __jsx(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 17\n  }\n}, \"\\uD83D\\uDC47\\uD83C\\uDFFB\"))), __jsx(\"tbody\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 13\n  }\n}, data.users && data.users.map(user => __jsx(UserPermissions, {\n  user: user,\n  key: user.id,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 58\n  }\n})))))));\n\nclass UserPermissions extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      permissions: this.props.user.permissions\n    });\n\n    _defineProperty(this, \"handlePermissionChange\", e => {\n      const checkbox = e.target; // take a copy of the current permissions\n\n      let updatedPermissions = [...this.state.permissions]; // figure out if we need to remove or add this permission\n\n      if (checkbox.checked) {\n        // add it in!\n        updatedPermissions.push(checkbox.value);\n      } else {\n        updatedPermissions = updatedPermissions.filter(permission => permission !== checkbox.value);\n      }\n\n      this.setState({\n        permissions: updatedPermissions\n      });\n    });\n  }\n\n  render() {\n    const user = this.props.user;\n    return __jsx(Mutation, {\n      mutation: UPDATE_PERMISSIONS_MUTATION,\n      variables: {\n        permissions: this.state.permissions,\n        userId: this.props.user.id\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, (updatePermissions, {\n      loading,\n      error\n    }) => __jsx(React.Fragment, null, error && __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 23\n      }\n    }, __jsx(\"td\", {\n      colspan: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 27\n      }\n    }, __jsx(Error, {\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 43\n      }\n    }))), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }\n    }, user.name), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, user.email), possiblePermissions.map(permission => __jsx(\"td\", {\n      key: permission,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, __jsx(\"label\", {\n      htmlFor: `${user.id}-permission-${permission}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 19\n      }\n    }, __jsx(\"input\", {\n      id: `${user.id}-permission-${permission}`,\n      type: \"checkbox\",\n      checked: this.state.permissions.includes(permission),\n      value: permission,\n      onChange: this.handlePermissionChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    })))), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, __jsx(SickButton, {\n      type: \"button\",\n      disabled: loading,\n      onClick: updatePermissions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"Updat\", loading ? 'ing' : 'e')))));\n  }\n\n}\n\n_defineProperty(UserPermissions, \"propTypes\", {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    email: PropTypes.string,\n    id: PropTypes.string,\n    permissions: PropTypes.array\n  }).isRequired\n});\n\nexport default Permissions;","map":{"version":3,"sources":["/Users/davidmacbook/Code/Advanced-React/sick-fits/frontend/Dempsey-Store-Frontend/components/Permissions.js"],"names":["Query","Mutation","Error","gql","Table","SickButton","PropTypes","possiblePermissions","UPDATE_PERMISSIONS_MUTATION","ALL_USERS_QUERY","Permissions","props","data","loading","error","map","permission","users","user","id","UserPermissions","React","Component","permissions","e","checkbox","target","updatedPermissions","state","checked","push","value","filter","setState","render","userId","updatePermissions","name","email","includes","handlePermissionChange","shape","string","array","isRequired"],"mappings":"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","sourcesContent":["import { Query, Mutation } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Table from './styles/Table';\nimport SickButton from './styles/SickButton';\nimport PropTypes from 'prop-types';\n\nconst possiblePermissions = [\n  'ADMIN',\n  'USER',\n  'ITEMCREATE',\n  'ITEMUPDATE',\n  'ITEMDELETE',\n  'PERMISSIONUPDATE',\n];\n\nconst UPDATE_PERMISSIONS_MUTATION = gql`\n  mutation updatePermissions($permissions: [Permission], $userId: ID!) {\n    updatePermissions(permissions: $permissions, userId: $userId) {\n      id\n      permissions\n      name\n      email\n    }\n  }\n`;\n\nconst ALL_USERS_QUERY = gql`\n  query {\n    users {\n      id\n      name\n      email\n      permissions\n    }\n  }\n`;\n\nconst Permissions = props => (\n  <Query query={ALL_USERS_QUERY}>\n    {({ data, loading, error }) => (\n      <div>\n        <Error error={error} />\n        <div>\n          <h2>Manage Permissions</h2>\n          <Table>\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Email</th>\n                {possiblePermissions.map(permission => <th key={permission}>{permission}</th>)}\n                <th>👇🏻</th>\n              </tr>\n            </thead>\n            <tbody>{data.users && data.users.map(user => <UserPermissions user={user} key={user.id} />)}</tbody>\n          </Table>\n        </div>\n      </div>\n    )}\n  </Query>\n);\n\nclass UserPermissions extends React.Component {\n  static propTypes = {\n    user: PropTypes.shape({\n      name: PropTypes.string,\n      email: PropTypes.string,\n      id: PropTypes.string,\n      permissions: PropTypes.array,\n    }).isRequired,\n  };\n  state = {\n    permissions: this.props.user.permissions,\n  };\n  handlePermissionChange = (e) => {\n    const checkbox = e.target;\n    // take a copy of the current permissions\n    let updatedPermissions = [...this.state.permissions];\n    // figure out if we need to remove or add this permission\n    if (checkbox.checked) {\n      // add it in!\n      updatedPermissions.push(checkbox.value);\n    } else {\n      updatedPermissions = updatedPermissions.filter(permission => permission !== checkbox.value);\n    }\n    this.setState({ permissions: updatedPermissions });\n  };\n  render() {\n    const user = this.props.user;\n    return (\n      <Mutation\n        mutation={UPDATE_PERMISSIONS_MUTATION}\n        variables={{\n          permissions: this.state.permissions,\n          userId: this.props.user.id,\n        }}\n      >\n        {(updatePermissions, { loading, error }) => (\n          <>\n            {error && <tr><td colspan=\"8\"><Error error={error} /></td></tr>}\n            < tr >\n              <td>{user.name}</td>\n              <td>{user.email}</td>\n              {possiblePermissions.map(permission => (\n                <td key={permission}>\n                  <label htmlFor={`${user.id}-permission-${permission}`}>\n                    <input\n                      id={`${user.id}-permission-${permission}`}\n                      type=\"checkbox\"\n                      checked={this.state.permissions.includes(permission)}\n                      value={permission}\n                      onChange={this.handlePermissionChange}\n                    />\n                  </label>\n                </td>\n              ))}\n              <td>\n                <SickButton type=\"button\" disabled={loading} onClick={updatePermissions}>\n                  Updat{loading ? 'ing' : 'e'}\n                </SickButton>\n              </td>\n            </tr>\n          </>\n        )\n        }\n      </Mutation>\n    );\n  }\n}\n\nexport default Permissions;"]},"metadata":{},"sourceType":"module"}